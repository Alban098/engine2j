name: Release

on:
  push:
    tags:
      - '*.*.*'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn --batch-mode --update-snapshots package

      - name: Copy Artifacts
        run: |
          mkdir build
          mkdir build/example
          mkdir build/example/assets
          cp core/target/graphics2j-core-${{ github.ref_name }}-jar-with-dependencies.jar build/graphics2j-core-${{ github.ref_name }}.jar
          cp core/target/graphics2j-core-${{ github.ref_name }}-sources.jar build
          cp core/target/graphics2j-core-${{ github.ref_name }}-javadoc.jar build
          cp example/target/graphics2j-example-${{ github.ref_name }}-jar-with-dependencies.jar build/example/graphics2j-example-${{ github.ref_name }}-executable.jar
          cp -R assets/* build/example/assets
          cp log4j.properties build/example/log4j.properties
          cd build/
          zip -r graphics2j-example-${{ github.ref_name }}.zip example
          rm -rf example

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Package
          path: build/*

  release:
    name: Release
    if: startsWith(github.ref, 'refs/tags/') # if it is a version tag, release it
    runs-on: ubuntu-latest
    needs: build # only release if build has been successful
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          path: out/artifacts

      - name: Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: v${{ github.ref_name }}
          draft: true
          prerelease: false
          files: |
            out/artifacts/**
